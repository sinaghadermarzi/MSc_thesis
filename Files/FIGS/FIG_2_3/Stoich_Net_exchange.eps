%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 481 243
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, February 13, 2017 8:02:16 AM IRST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
481 243 setpagesize
0 0 0 0 setmargins
0 0 setorigin
481 243 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
481.000 0.00000 l
481.000 243.000 l
0.00000 243.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
481.000 0.00000 l
481.000 243.000 l
0.00000 243.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 481 243 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 63.0000 -165.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
-63.0000 165.000 m
418.000 165.000 l
418.000 408.000 l
-63.0000 408.000 l
-63.0000 165.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 63.0000 -165.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 63.0000 -165.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 63.0000 -165.000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 0.00000 RG
newpath
184.340 286.352 m
184.340 297.398 175.386 306.352 164.340 306.352  c
153.294 306.352 144.340 297.398 144.340 286.352  c
144.340 275.306 153.294 266.352 164.340 266.352  c
175.386 266.352 184.340 275.306 184.340 286.352  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
160.356 282.806 m
160.731 281.910 161.207 281.220 161.785 280.736  c
162.363 280.251 163.080 280.009 163.934 280.009  c
164.996 280.009 165.814 280.353 166.387 281.040  c
166.814 281.561 167.027 282.113 167.027 282.697  c
167.027 283.655 166.423 284.650 165.215 285.681  c
166.027 286.004 166.642 286.460 167.059 287.048  c
167.475 287.637 167.684 288.332 167.684 289.134  c
167.684 290.280 167.319 291.275 166.590 292.119  c
165.642 293.212 164.262 293.759 162.449 293.759  c
161.564 293.759 160.960 293.647 160.637 293.423  c
160.314 293.199 160.152 292.962 160.152 292.712  c
160.152 292.525 160.228 292.358 160.379 292.212  c
160.530 292.067 160.715 291.994 160.934 291.994  c
161.100 291.994 161.267 292.020 161.434 292.072  c
161.538 292.113 161.785 292.236 162.176 292.439  c
162.567 292.642 162.840 292.764 162.996 292.806  c
163.236 292.879 163.491 292.915 163.762 292.915  c
164.429 292.915 165.007 292.658 165.496 292.142  c
165.986 291.626 166.231 291.014 166.231 290.306  c
166.231 289.796 166.116 289.296 165.887 288.806  c
165.720 288.442 165.538 288.165 165.340 287.978  c
165.059 287.718 164.673 287.481 164.184 287.267  c
163.694 287.053 163.194 286.947 162.684 286.947  c
162.371 286.947 l
162.371 286.665 l
162.892 286.593 163.410 286.405 163.926 286.103  c
164.442 285.801 164.817 285.434 165.051 285.001  c
165.285 284.569 165.402 284.098 165.402 283.587  c
165.402 282.910 165.194 282.366 164.777 281.955  c
164.361 281.543 163.840 281.337 163.215 281.337  c
162.205 281.337 161.361 281.879 160.684 282.962  c
160.356 282.806 l
h
f
2 J
10.0000 M
1.00000 1.00000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
184.340 286.352 m
184.340 297.398 175.386 306.352 164.340 306.352  c
153.294 306.352 144.340 297.398 144.340 286.352  c
144.340 275.306 153.294 266.352 164.340 266.352  c
175.386 266.352 184.340 275.306 184.340 286.352  c
h
S
2 J
10.0000 M
1.00000 1.00000 0.00000 RG
newpath
334.830 216.352 m
334.830 227.398 325.876 236.352 314.830 236.352  c
303.784 236.352 294.830 227.398 294.830 216.352  c
294.830 205.306 303.784 196.352 314.830 196.352  c
325.876 196.352 334.830 205.306 334.830 216.352  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
318.517 210.275 m
317.752 211.947 l
313.767 211.947 l
312.892 213.712 l
314.622 213.973 315.991 214.619 317.002 215.650  c
317.866 216.535 318.299 217.577 318.299 218.775  c
318.299 219.462 318.158 220.103 317.877 220.697  c
317.596 221.290 317.239 221.796 316.807 222.212  c
316.374 222.629 315.892 222.968 315.361 223.228  c
314.622 223.582 313.856 223.759 313.064 223.759  c
312.273 223.759 311.695 223.624 311.330 223.353  c
310.965 223.082 310.783 222.785 310.783 222.462  c
310.783 222.275 310.859 222.111 311.010 221.970  c
311.161 221.830 311.351 221.759 311.580 221.759  c
311.747 221.759 311.895 221.785 312.025 221.837  c
312.156 221.889 312.372 222.025 312.674 222.244  c
313.163 222.587 313.658 222.759 314.158 222.759  c
314.919 222.759 315.588 222.470 316.166 221.892  c
316.744 221.314 317.033 220.613 317.033 219.790  c
317.033 218.988 316.775 218.241 316.260 217.548  c
315.744 216.856 315.033 216.317 314.127 215.931  c
313.419 215.639 312.450 215.473 311.221 215.431  c
313.767 210.275 l
318.517 210.275 l
h
f
2 J
10.0000 M
1.00000 1.00000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
334.830 216.352 m
334.830 227.398 325.876 236.352 314.830 236.352  c
303.784 236.352 294.830 227.398 294.830 216.352  c
294.830 205.306 303.784 196.352 314.830 196.352  c
325.876 196.352 334.830 205.306 334.830 216.352  c
h
S
2 J
10.0000 M
1.00000 1.00000 0.00000 RG
newpath
334.830 286.352 m
334.830 297.398 325.876 306.352 314.830 306.352  c
303.784 306.352 294.830 297.398 294.830 286.352  c
294.830 275.306 303.784 266.352 314.830 266.352  c
325.876 266.352 334.830 275.306 334.830 286.352  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
318.799 280.009 m
318.799 280.369 l
317.934 280.452 317.231 280.624 316.689 280.884  c
316.148 281.145 315.611 281.538 315.080 282.064  c
314.549 282.590 314.109 283.176 313.760 283.822  c
313.411 284.468 313.122 285.238 312.892 286.134  c
313.830 285.488 314.767 285.165 315.705 285.165  c
316.611 285.165 317.398 285.530 318.064 286.259  c
318.731 286.988 319.064 287.926 319.064 289.072  c
319.064 290.176 318.726 291.186 318.049 292.103  c
317.247 293.207 316.179 293.759 314.846 293.759  c
313.939 293.759 313.174 293.457 312.549 292.853  c
311.309 291.697 310.689 290.186 310.689 288.322  c
310.689 287.145 310.926 286.022 311.400 284.955  c
311.874 283.887 312.554 282.939 313.439 282.111  c
314.325 281.283 315.171 280.725 315.978 280.439  c
316.786 280.152 317.538 280.009 318.236 280.009  c
318.799 280.009 l
h
312.721 286.837 m
312.606 287.723 312.549 288.436 312.549 288.978  c
312.549 289.603 312.663 290.280 312.892 291.009  c
313.122 291.738 313.465 292.322 313.924 292.759  c
314.257 293.061 314.658 293.212 315.127 293.212  c
315.700 293.212 316.208 292.944 316.650 292.408  c
317.093 291.871 317.314 291.108 317.314 290.119  c
317.314 289.014 317.093 288.053 316.650 287.236  c
316.208 286.418 315.580 286.009 314.767 286.009  c
314.528 286.009 314.265 286.061 313.978 286.165  c
313.692 286.270 313.273 286.494 312.721 286.837  c
h
f
2 J
10.0000 M
1.00000 1.00000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
334.830 286.352 m
334.830 297.398 325.876 306.352 314.830 306.352  c
303.784 306.352 294.830 297.398 294.830 286.352  c
294.830 275.306 303.784 266.352 314.830 266.352  c
325.876 266.352 334.830 275.306 334.830 286.352  c
h
S
2 J
10.0000 M
1.00000 1.00000 0.00000 RG
newpath
184.340 216.352 m
184.340 227.398 175.386 236.352 164.340 236.352  c
153.294 236.352 144.340 227.398 144.340 216.352  c
144.340 205.306 153.294 196.352 164.340 196.352  c
175.386 196.352 184.340 205.306 184.340 216.352  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
168.512 220.978 m
167.590 223.525 l
159.777 223.525 l
159.777 223.165 l
162.069 221.072 163.684 219.361 164.621 218.033  c
165.559 216.705 166.027 215.488 166.027 214.384  c
166.027 213.540 165.770 212.850 165.254 212.314  c
164.738 211.777 164.126 211.509 163.418 211.509  c
162.762 211.509 162.176 211.699 161.660 212.080  c
161.145 212.460 160.762 213.014 160.512 213.744  c
160.152 213.744 l
160.319 212.546 160.738 211.624 161.410 210.978  c
162.082 210.332 162.923 210.009 163.934 210.009  c
165.007 210.009 165.902 210.353 166.621 211.040  c
167.340 211.728 167.699 212.540 167.699 213.478  c
167.699 214.155 167.543 214.827 167.231 215.494  c
166.751 216.546 165.970 217.665 164.887 218.853  c
163.262 220.624 162.251 221.692 161.856 222.056  c
165.309 222.056 l
166.007 222.056 166.499 222.030 166.785 221.978  c
167.072 221.926 167.330 221.819 167.559 221.658  c
167.788 221.496 167.986 221.270 168.152 220.978  c
168.512 220.978 l
h
f
2 J
10.0000 M
1.00000 1.00000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
184.340 216.352 m
184.340 227.398 175.386 236.352 164.340 236.352  c
153.294 236.352 144.340 227.398 144.340 216.352  c
144.340 205.306 153.294 196.352 164.340 196.352  c
175.386 196.352 184.340 205.306 184.340 216.352  c
h
S
2 J
10.0000 M
1.00000 1.00000 0.00000 RG
newpath
184.340 356.352 m
184.340 367.398 175.386 376.352 164.340 376.352  c
153.294 376.352 144.340 367.398 144.340 356.352  c
144.340 345.306 153.294 336.352 164.340 336.352  c
175.386 336.352 184.340 345.306 184.340 356.352  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
168.652 358.634 m
168.652 360.025 l
166.871 360.025 l
166.871 363.525 l
165.262 363.525 l
165.262 360.025 l
159.652 360.025 l
159.652 358.775 l
165.793 350.009 l
166.871 350.009 l
166.871 358.634 l
168.652 358.634 l
h
165.262 358.634 m
165.262 352.072 l
160.606 358.634 l
165.262 358.634 l
h
f
2 J
10.0000 M
1.00000 1.00000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
184.340 356.352 m
184.340 367.398 175.386 376.352 164.340 376.352  c
153.294 376.352 144.340 367.398 144.340 356.352  c
144.340 345.306 153.294 336.352 164.340 336.352  c
175.386 336.352 184.340 345.306 184.340 356.352  c
h
S
2 J
10.0000 M
1.00000 1.00000 0.00000 RG
newpath
46.5600 286.352 m
46.5600 297.398 37.6057 306.352 26.5600 306.352  c
15.5143 306.352 6.56000 297.398 6.56000 286.352  c
6.56000 275.306 15.5143 266.352 26.5600 266.352  c
37.6057 266.352 46.5600 275.306 46.5600 286.352  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
23.9037 281.587 m
27.1225 280.009 l
27.4506 280.009 l
27.4506 291.197 l
27.4506 291.936 27.4819 292.397 27.5444 292.580  c
27.6069 292.762 27.7345 292.902 27.9272 293.001  c
28.1199 293.100 28.5183 293.155 29.1225 293.165  c
29.1225 293.525 l
24.1381 293.525 l
24.1381 293.165 l
24.7631 293.155 25.1668 293.100 25.3491 293.001  c
25.5314 292.902 25.6590 292.775 25.7319 292.619  c
25.8048 292.462 25.8412 291.988 25.8412 291.197  c
25.8412 284.040 l
25.8412 283.082 25.8100 282.462 25.7475 282.181  c
25.6954 281.973 25.6095 281.822 25.4897 281.728  c
25.3699 281.634 25.2267 281.587 25.0600 281.587  c
24.8204 281.587 24.4819 281.686 24.0444 281.884  c
23.9037 281.587 l
h
f
2 J
10.0000 M
1.00000 1.00000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
46.5600 286.352 m
46.5600 297.398 37.6057 306.352 26.5600 306.352  c
15.5143 306.352 6.56000 297.398 6.56000 286.352  c
6.56000 275.306 15.5143 266.352 26.5600 266.352  c
37.6057 266.352 46.5600 275.306 46.5600 286.352  c
h
S
2 J
10.0000 M
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [93.78333282470703 281.35198974609375 100.44999694824219 281.35198974609375]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.0 0.0 0.0]
         /C1 [0.0 0.0 0.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
90.4500 281.352 m
100.450 281.352 l
100.450 291.352 l
90.4500 291.352 l
90.4500 281.352 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
99.3338 299.551 m
98.8025 300.864 l
98.4484 300.812 98.0630 300.692 97.6463 300.504  c
97.3234 300.369 97.0630 300.301 96.8650 300.301  c
96.5630 300.301 96.2765 300.489 96.0057 300.864  c
95.6723 301.332 95.4432 301.697 95.3182 301.957  c
95.3182 306.223 l
95.3182 306.702 95.4380 307.030 95.6775 307.207  c
95.8755 307.343 96.2296 307.411 96.7400 307.411  c
97.5838 307.411 l
97.5838 307.832 l
92.3494 307.832 l
92.3494 307.411 l
92.9119 307.411 93.3025 307.275 93.5213 307.004  c
93.7296 306.754 93.8338 306.343 93.8338 305.770  c
93.8338 300.676 l
92.3494 300.161 l
92.3494 299.786 l
94.8650 298.911 l
95.3182 298.911 l
95.3494 301.239 l
95.7661 300.562 95.9900 300.202 96.0213 300.161  c
96.3546 299.661 96.6202 299.338 96.8182 299.192  c
96.9848 299.077 97.1932 299.020 97.4432 299.020  c
97.6202 299.020 97.8702 299.082 98.1932 299.207  c
99.3338 299.551 l
h
107.519 307.832 m
101.972 307.832 l
101.972 307.411 l
103.160 307.411 l
103.504 307.411 103.730 307.353 103.840 307.239  c
103.949 307.124 104.004 306.895 104.004 306.551  c
104.004 295.582 l
103.191 296.291 102.275 296.890 101.254 297.379  c
101.066 297.082 l
101.629 296.707 102.280 296.202 103.019 295.567  c
103.842 294.848 104.405 294.265 104.707 293.817  c
105.472 293.817 l
105.472 306.582 l
105.472 306.916 105.527 307.137 105.637 307.247  c
105.746 307.356 105.962 307.411 106.285 307.411  c
107.519 307.411 l
107.519 307.832 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
90.4500 281.352 m
100.450 281.352 l
100.450 291.352 l
90.4500 291.352 l
90.4500 281.352 l
h
S
2 J
10.0000 M
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [231.56333923339844 281.35198974609375 238.22999572753906 281.35198974609375]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.0 0.0 0.0]
         /C1 [0.0 0.0 0.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
228.230 281.352 m
238.230 281.352 l
238.230 291.352 l
228.230 291.352 l
228.230 281.352 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
237.114 299.551 m
236.583 300.864 l
236.228 300.812 235.843 300.692 235.426 300.504  c
235.103 300.369 234.843 300.301 234.645 300.301  c
234.343 300.301 234.056 300.489 233.786 300.864  c
233.452 301.332 233.223 301.697 233.098 301.957  c
233.098 306.223 l
233.098 306.702 233.218 307.030 233.458 307.207  c
233.655 307.343 234.010 307.411 234.520 307.411  c
235.364 307.411 l
235.364 307.832 l
230.129 307.832 l
230.129 307.411 l
230.692 307.411 231.083 307.275 231.301 307.004  c
231.510 306.754 231.614 306.343 231.614 305.770  c
231.614 300.676 l
230.129 300.161 l
230.129 299.786 l
232.645 298.911 l
233.098 298.911 l
233.129 301.239 l
233.546 300.562 233.770 300.202 233.801 300.161  c
234.135 299.661 234.400 299.338 234.598 299.192  c
234.765 299.077 234.973 299.020 235.223 299.020  c
235.400 299.020 235.650 299.082 235.973 299.207  c
237.114 299.551 l
h
246.534 302.989 m
246.534 303.905 246.258 304.775 245.706 305.598  c
245.206 306.359 244.534 306.968 243.690 307.426  c
242.836 307.905 241.930 308.145 240.971 308.145  c
239.711 308.145 238.752 307.879 238.096 307.348  c
237.794 307.119 237.643 306.864 237.643 306.582  c
237.643 306.395 237.711 306.223 237.846 306.067  c
237.982 305.911 238.138 305.832 238.315 305.832  c
238.544 305.832 238.940 306.041 239.502 306.457  c
240.690 307.317 l
240.940 307.473 241.284 307.551 241.721 307.551  c
242.909 307.551 243.815 306.885 244.440 305.551  c
244.732 304.937 244.877 304.275 244.877 303.567  c
244.877 302.786 244.674 302.103 244.268 301.520  c
243.820 300.843 243.226 300.504 242.487 300.504  c
241.956 300.504 241.440 300.702 240.940 301.098  c
240.737 300.801 l
241.476 300.176 241.956 299.760 242.174 299.551  c
242.726 299.030 243.133 298.551 243.393 298.114  c
243.622 297.739 243.737 297.359 243.737 296.973  c
243.737 296.390 243.526 295.905 243.104 295.520  c
242.682 295.135 242.180 294.942 241.596 294.942  c
240.992 294.942 240.409 295.166 239.846 295.614  c
239.357 296.010 238.966 296.504 238.674 297.098  c
238.284 296.942 l
238.794 295.640 239.596 294.723 240.690 294.192  c
241.211 293.942 241.763 293.817 242.346 293.817  c
243.482 293.817 244.315 294.223 244.846 295.036  c
245.086 295.411 245.206 295.822 245.206 296.270  c
245.206 297.447 244.450 298.484 242.940 299.379  c
242.987 299.411 l
243.091 299.400 243.195 299.395 243.299 299.395  c
244.539 299.395 245.461 299.973 246.065 301.129  c
246.377 301.723 246.534 302.343 246.534 302.989  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
228.230 281.352 m
238.230 281.352 l
238.230 291.352 l
228.230 291.352 l
228.230 281.352 l
h
S
2 J
10.0000 M
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [237.9183349609375 211.3520050048828 244.5850067138672 211.3520050048828]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.0 0.0 0.0]
         /C1 [0.0 0.0 0.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
234.585 211.352 m
244.585 211.352 l
244.585 221.352 l
234.585 221.352 l
234.585 211.352 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
238.076 194.669 m
237.545 195.982 l
237.191 195.930 236.805 195.810 236.389 195.623  c
236.066 195.487 235.805 195.419 235.607 195.419  c
235.305 195.419 235.019 195.607 234.748 195.982  c
234.415 196.451 234.186 196.815 234.061 197.076  c
234.061 201.341 l
234.061 201.820 234.180 202.149 234.420 202.326  c
234.618 202.461 234.972 202.529 235.482 202.529  c
236.326 202.529 l
236.326 202.951 l
231.092 202.951 l
231.092 202.529 l
231.654 202.529 232.045 202.393 232.264 202.123  c
232.472 201.873 232.576 201.461 232.576 200.888  c
232.576 195.794 l
231.092 195.279 l
231.092 194.904 l
233.607 194.029 l
234.061 194.029 l
234.092 196.357 l
234.509 195.680 234.732 195.320 234.764 195.279  c
235.097 194.779 235.363 194.456 235.561 194.310  c
235.727 194.195 235.936 194.138 236.186 194.138  c
236.363 194.138 236.613 194.201 236.936 194.326  c
238.076 194.669 l
h
247.746 199.873 m
247.324 202.951 l
238.512 202.951 l
238.512 202.607 l
239.095 201.867 239.897 200.987 240.918 199.966  c
242.449 198.445 243.293 197.602 243.449 197.435  c
244.824 195.977 245.512 194.550 245.512 193.154  c
245.512 192.008 245.038 191.149 244.090 190.576  c
243.642 190.326 243.147 190.201 242.606 190.201  c
241.783 190.201 241.048 190.498 240.402 191.091  c
239.819 191.643 239.402 192.336 239.152 193.169  c
238.809 193.169 l
238.944 191.899 239.421 190.875 240.238 190.099  c
241.056 189.323 242.059 188.935 243.246 188.935  c
244.840 188.935 246.017 189.570 246.777 190.841  c
247.121 191.445 247.293 192.112 247.293 192.841  c
247.293 194.112 246.767 195.284 245.715 196.357  c
243.652 198.091 l
242.434 199.112 241.194 200.279 239.934 201.591  c
245.715 201.591 l
246.423 201.591 246.871 201.388 247.059 200.982  c
247.152 200.763 247.262 200.393 247.387 199.873  c
247.746 199.873 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
234.585 211.352 m
244.585 211.352 l
244.585 221.352 l
234.585 221.352 l
234.585 211.352 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
390.224 299.551 m
389.693 300.864 l
389.338 300.812 388.953 300.692 388.536 300.504  c
388.213 300.369 387.953 300.301 387.755 300.301  c
387.453 300.301 387.166 300.489 386.896 300.864  c
386.562 301.332 386.333 301.697 386.208 301.957  c
386.208 306.223 l
386.208 306.702 386.328 307.030 386.568 307.207  c
386.765 307.343 387.120 307.411 387.630 307.411  c
388.474 307.411 l
388.474 307.832 l
383.239 307.832 l
383.239 307.411 l
383.802 307.411 384.193 307.275 384.411 307.004  c
384.620 306.754 384.724 306.343 384.724 305.770  c
384.724 300.676 l
383.239 300.161 l
383.239 299.786 l
385.755 298.911 l
386.208 298.911 l
386.239 301.239 l
386.656 300.562 386.880 300.202 386.911 300.161  c
387.245 299.661 387.510 299.338 387.708 299.192  c
387.875 299.077 388.083 299.020 388.333 299.020  c
388.510 299.020 388.760 299.082 389.083 299.207  c
390.224 299.551 l
h
399.894 303.707 m
399.894 305.385 399.175 306.661 397.737 307.536  c
397.071 307.942 396.357 308.145 395.597 308.145  c
394.566 308.145 393.659 307.817 392.878 307.161  c
392.170 306.556 391.654 305.744 391.331 304.723  c
391.102 304.025 390.987 303.260 390.987 302.426  c
390.987 300.270 391.706 298.411 393.144 296.848  c
394.456 295.442 396.196 294.431 398.362 293.817  c
398.612 294.145 l
396.321 295.072 394.717 296.379 393.800 298.067  c
393.342 298.911 393.029 299.864 392.862 300.926  c
393.967 300.072 395.008 299.645 395.987 299.645  c
397.477 299.645 398.602 300.322 399.362 301.676  c
399.717 302.301 399.894 302.978 399.894 303.707  c
h
398.237 303.895 m
398.237 302.926 398.055 302.109 397.691 301.442  c
397.232 300.598 396.555 300.176 395.659 300.176  c
394.826 300.176 393.857 300.619 392.753 301.504  c
392.680 301.848 392.644 302.301 392.644 302.864  c
392.644 304.103 392.836 305.155 393.222 306.020  c
393.732 307.187 394.534 307.770 395.628 307.770  c
396.566 307.770 397.258 307.332 397.706 306.457  c
398.060 305.770 398.237 304.916 398.237 303.895  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
99.3338 369.551 m
98.8025 370.864 l
98.4484 370.812 98.0630 370.692 97.6463 370.504  c
97.3234 370.369 97.0630 370.301 96.8650 370.301  c
96.5630 370.301 96.2765 370.489 96.0057 370.864  c
95.6723 371.332 95.4432 371.697 95.3182 371.957  c
95.3182 376.223 l
95.3182 376.702 95.4380 377.030 95.6775 377.207  c
95.8755 377.343 96.2296 377.411 96.7400 377.411  c
97.5838 377.411 l
97.5838 377.832 l
92.3494 377.832 l
92.3494 377.411 l
92.9119 377.411 93.3025 377.275 93.5213 377.004  c
93.7296 376.754 93.8338 376.343 93.8338 375.770  c
93.8338 370.676 l
92.3494 370.161 l
92.3494 369.786 l
94.8650 368.911 l
95.3182 368.911 l
95.3494 371.239 l
95.7661 370.562 95.9900 370.202 96.0213 370.161  c
96.3546 369.661 96.6202 369.338 96.8182 369.192  c
96.9848 369.077 97.1932 369.020 97.4432 369.020  c
97.6202 369.020 97.8702 369.082 98.1932 369.207  c
99.3338 369.551 l
h
108.535 373.457 m
108.535 375.291 107.691 376.645 106.004 377.520  c
105.202 377.937 104.321 378.145 103.363 378.145  c
102.717 378.145 102.087 378.056 101.472 377.879  c
100.587 377.619 100.144 377.249 100.144 376.770  c
100.144 376.312 100.389 376.082 100.879 376.082  c
101.254 376.082 101.717 376.327 102.269 376.817  c
102.863 377.359 103.394 377.629 103.863 377.629  c
104.998 377.629 105.868 377.004 106.472 375.754  c
106.743 375.192 106.879 374.577 106.879 373.911  c
106.879 372.890 106.566 372.054 105.941 371.403  c
105.316 370.752 104.535 370.426 103.597 370.426  c
102.743 370.426 101.967 370.697 101.269 371.239  c
101.051 371.082 l
101.363 364.114 l
106.566 364.114 l
106.889 364.114 107.103 364.015 107.207 363.817  c
107.629 363.817 l
107.379 365.536 l
101.816 365.536 l
101.644 369.504 l
102.311 369.140 103.103 368.957 104.019 368.957  c
105.269 368.957 106.332 369.395 107.207 370.270  c
108.092 371.176 108.535 372.239 108.535 373.457  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
-38.4462 299.551 m
-38.9775 300.864 l
-39.3316 300.812 -39.7170 300.692 -40.1337 300.504  c
-40.4566 300.369 -40.7170 300.301 -40.9150 300.301  c
-41.2170 300.301 -41.5035 300.489 -41.7743 300.864  c
-42.1077 301.332 -42.3368 301.697 -42.4618 301.957  c
-42.4618 306.223 l
-42.4618 306.702 -42.3420 307.030 -42.1025 307.207  c
-41.9045 307.343 -41.5504 307.411 -41.0400 307.411  c
-40.1962 307.411 l
-40.1962 307.832 l
-45.4306 307.832 l
-45.4306 307.411 l
-44.8681 307.411 -44.4775 307.275 -44.2587 307.004  c
-44.0504 306.754 -43.9462 306.343 -43.9462 305.770  c
-43.9462 300.676 l
-45.4306 300.161 l
-45.4306 299.786 l
-42.9150 298.911 l
-42.4618 298.911 l
-42.4306 301.239 l
-42.0139 300.562 -41.7900 300.202 -41.7587 300.161  c
-41.4254 299.661 -41.1598 299.338 -40.9618 299.192  c
-40.7952 299.077 -40.5868 299.020 -40.3368 299.020  c
-40.1598 299.020 -39.9098 299.082 -39.5868 299.207  c
-38.4462 299.551 l
h
-28.5888 303.832 m
-30.7919 303.832 l
-30.7919 308.145 l
-32.2607 308.145 l
-32.2607 303.832 l
-37.8857 303.832 l
-37.8857 303.332 l
-31.4013 293.817 l
-30.7919 293.817 l
-30.7919 302.739 l
-28.5888 302.739 l
-28.5888 303.832 l
h
-32.2607 302.739 m
-32.3075 295.911 l
-36.8544 302.739 l
-32.2607 302.739 l
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
46.5600 286.352 m
90.4500 286.352 l
S
1.00000 w
newpath
58.3438 279.867 m
57.5938 281.914 l
51.3438 281.914 l
51.3438 281.617 l
53.1875 279.940 54.4844 278.571 55.2344 277.508  c
55.9844 276.446 56.3594 275.477 56.3594 274.602  c
56.3594 273.925 56.1536 273.370 55.7422 272.938  c
55.3307 272.505 54.8385 272.289 54.2656 272.289  c
53.7448 272.289 53.2760 272.443 52.8594 272.750  c
52.4427 273.058 52.1354 273.503 51.9375 274.086  c
51.6562 274.086 l
51.7812 273.128 52.1146 272.391 52.6562 271.875  c
53.1979 271.360 53.8698 271.102 54.6719 271.102  c
55.5365 271.102 56.2552 271.378 56.8281 271.930  c
57.4010 272.482 57.6875 273.133 57.6875 273.883  c
57.6875 274.414 57.5625 274.951 57.3125 275.492  c
56.9271 276.336 56.3021 277.227 55.4375 278.164  c
54.1458 279.581 53.3385 280.435 53.0156 280.727  c
55.7812 280.727 l
56.3438 280.727 56.7370 280.706 56.9609 280.664  c
57.1849 280.623 57.3880 280.539 57.5703 280.414  c
57.7526 280.289 57.9115 280.107 58.0469 279.867  c
58.3438 279.867 l
h
f
3.00000 w
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
100.450 286.352 m
134.340 286.352 l
S
newpath
144.340 286.352 m
129.340 280.102 l
133.090 286.352 l
129.340 292.602 l
h
f
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
100.371 281.352 m
143.297 237.734 l
S
newpath
150.311 230.607 m
135.335 236.914 l
142.420 238.625 l
144.244 245.682 l
h
f
1.00000 w
newpath
122.812 236.160 m
123.115 235.441 123.497 234.889 123.961 234.504  c
124.424 234.118 125.000 233.926 125.688 233.926  c
126.531 233.926 127.182 234.202 127.641 234.754  c
127.984 235.160 128.156 235.598 128.156 236.066  c
128.156 236.837 127.672 237.634 126.703 238.457  c
127.349 238.717 127.839 239.085 128.172 239.559  c
128.505 240.033 128.672 240.587 128.672 241.223  c
128.672 242.139 128.380 242.936 127.797 243.613  c
127.036 244.488 125.938 244.926 124.500 244.926  c
123.781 244.926 123.294 244.837 123.039 244.660  c
122.784 244.483 122.656 244.290 122.656 244.082  c
122.656 243.936 122.716 243.806 122.836 243.691  c
122.956 243.577 123.104 243.520 123.281 243.520  c
123.406 243.520 123.536 243.540 123.672 243.582  c
123.766 243.603 123.969 243.697 124.281 243.863  c
124.594 244.030 124.807 244.129 124.922 244.160  c
125.120 244.212 125.328 244.238 125.547 244.238  c
126.078 244.238 126.539 244.033 126.930 243.621  c
127.320 243.210 127.516 242.723 127.516 242.160  c
127.516 241.754 127.427 241.353 127.250 240.957  c
127.115 240.665 126.964 240.447 126.797 240.301  c
126.578 240.092 126.273 239.902 125.883 239.730  c
125.492 239.559 125.094 239.473 124.688 239.473  c
124.438 239.473 l
124.438 239.238 l
124.844 239.186 125.255 239.038 125.672 238.793  c
126.089 238.548 126.391 238.254 126.578 237.910  c
126.766 237.566 126.859 237.191 126.859 236.785  c
126.859 236.243 126.690 235.809 126.352 235.480  c
126.013 235.152 125.594 234.988 125.094 234.988  c
124.292 234.988 123.620 235.421 123.078 236.285  c
122.812 236.160 l
h
f
3.00000 w
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
178.369 342.097 m
228.309 291.352 l
S
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
184.340 286.352 m
228.230 286.352 l
S
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
178.369 230.607 m
228.309 281.352 l
S
1.00000 w
newpath
175.174 242.960 m
175.476 242.241 175.859 241.689 176.323 241.303  c
176.786 240.918 177.362 240.725 178.049 240.725  c
178.893 240.725 179.544 241.001 180.002 241.553  c
180.346 241.960 180.518 242.397 180.518 242.866  c
180.518 243.637 180.034 244.433 179.065 245.256  c
179.711 245.517 180.200 245.884 180.534 246.358  c
180.867 246.832 181.034 247.387 181.034 248.022  c
181.034 248.939 180.742 249.736 180.159 250.413  c
179.398 251.288 178.299 251.725 176.862 251.725  c
176.143 251.725 175.656 251.637 175.401 251.460  c
175.146 251.282 175.018 251.090 175.018 250.881  c
175.018 250.736 175.078 250.605 175.198 250.491  c
175.317 250.376 175.466 250.319 175.643 250.319  c
175.768 250.319 175.898 250.340 176.034 250.381  c
176.127 250.402 176.330 250.496 176.643 250.663  c
176.955 250.829 177.169 250.928 177.284 250.960  c
177.482 251.012 177.690 251.038 177.909 251.038  c
178.440 251.038 178.901 250.832 179.291 250.420  c
179.682 250.009 179.877 249.522 179.877 248.960  c
179.877 248.553 179.789 248.152 179.612 247.756  c
179.476 247.465 179.325 247.246 179.159 247.100  c
178.940 246.892 178.635 246.702 178.245 246.530  c
177.854 246.358 177.455 246.272 177.049 246.272  c
176.799 246.272 l
176.799 246.038 l
177.205 245.986 177.617 245.837 178.034 245.592  c
178.450 245.348 178.752 245.053 178.940 244.710  c
179.127 244.366 179.221 243.991 179.221 243.585  c
179.221 243.043 179.052 242.608 178.713 242.280  c
178.375 241.952 177.955 241.788 177.455 241.788  c
176.653 241.788 175.982 242.220 175.440 243.085  c
175.174 242.960 l
h
f
3.00000 w
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
238.230 286.352 m
284.830 286.352 l
S
newpath
294.830 286.352 m
279.830 280.102 l
283.580 286.352 l
279.830 292.602 l
h
f
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
184.340 216.352 m
234.585 216.352 l
S
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
244.585 216.352 m
284.830 216.352 l
S
newpath
294.830 216.352 m
279.830 210.102 l
283.580 216.352 l
279.830 222.602 l
h
f
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
334.830 286.352 m
371.340 286.352 l
S
newpath
381.340 286.352 m
366.340 280.102 l
370.090 286.352 l
366.340 292.602 l
h
f
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
100.450 356.352 m
134.340 356.352 l
S
newpath
144.340 356.352 m
129.340 350.102 l
133.090 356.352 l
129.340 362.602 l
h
f
1.00000 w
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
-37.3300 286.352 m
-3.44000 286.352 l
S
newpath
6.56000 286.352 m
-8.44000 280.102 l
-4.69000 286.352 l
-8.44000 292.602 l
h
f
1.00000 w
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
