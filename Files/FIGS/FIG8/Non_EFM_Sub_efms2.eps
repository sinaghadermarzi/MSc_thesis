%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 511 316
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, February 13, 2017 10:42:24 AM IRST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
511 316 setpagesize
0 0 0 0 setmargins
0 0 setorigin
511 316 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
511.000 0.00000 l
511.000 316.000 l
0.00000 316.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
511.000 0.00000 l
511.000 316.000 l
0.00000 316.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 511 316 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -157.000 -153.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
157.000 153.000 m
668.000 153.000 l
668.000 469.000 l
157.000 469.000 l
157.000 153.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -157.000 -153.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -157.000 -153.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -157.000 -153.000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 0.00000 RG
newpath
322.600 339.400 m
322.600 350.446 313.646 359.400 302.600 359.400  c
291.554 359.400 282.600 350.446 282.600 339.400  c
282.600 328.354 291.554 319.400 302.600 319.400  c
313.646 319.400 322.600 328.354 322.600 339.400  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
299.678 334.150 m
303.225 332.415 l
303.584 332.415 l
303.584 344.728 l
303.584 345.540 303.618 346.048 303.686 346.251  c
303.754 346.454 303.894 346.608 304.108 346.712  c
304.321 346.816 304.756 346.879 305.413 346.900  c
305.413 347.290 l
299.944 347.290 l
299.944 346.900 l
300.631 346.879 301.074 346.816 301.272 346.712  c
301.470 346.608 301.608 346.470 301.686 346.298  c
301.764 346.126 301.803 345.603 301.803 344.728  c
301.803 336.853 l
301.803 335.801 301.767 335.123 301.694 334.821  c
301.642 334.592 301.551 334.423 301.420 334.314  c
301.290 334.204 301.131 334.150 300.944 334.150  c
300.683 334.150 300.314 334.259 299.834 334.478  c
299.678 334.150 l
h
f
2 J
10.0000 M
1.00000 1.00000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
322.600 339.400 m
322.600 350.446 313.646 359.400 302.600 359.400  c
291.554 359.400 282.600 350.446 282.600 339.400  c
282.600 328.354 291.554 319.400 302.600 319.400  c
313.646 319.400 322.600 328.354 322.600 339.400  c
h
S
2 J
10.0000 M
1.00000 1.00000 .600000 RG
newpath
612.600 180.116 m
624.316 168.400 l
640.884 168.400 l
652.600 180.116 l
652.600 196.684 l
640.884 208.400 l
624.316 208.400 l
612.600 196.684 l
h
f*
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
636.959 181.415 m
636.959 181.821 l
636.011 181.915 635.241 182.103 634.647 182.384  c
634.053 182.665 633.465 183.097 632.881 183.681  c
632.298 184.264 631.814 184.910 631.428 185.618  c
631.043 186.327 630.720 187.176 630.459 188.165  c
631.491 187.446 632.527 187.087 633.569 187.087  c
634.558 187.087 635.420 187.488 636.155 188.290  c
636.889 189.092 637.256 190.123 637.256 191.384  c
637.256 192.603 636.886 193.717 636.147 194.728  c
635.261 195.946 634.084 196.556 632.616 196.556  c
631.626 196.556 630.782 196.222 630.084 195.556  c
628.730 194.275 628.053 192.613 628.053 190.571  c
628.053 189.269 628.314 188.032 628.834 186.860  c
629.355 185.689 630.100 184.647 631.069 183.735  c
632.037 182.824 632.967 182.209 633.858 181.892  c
634.748 181.574 635.574 181.415 636.334 181.415  c
636.959 181.415 l
h
630.287 188.946 m
630.152 189.915 630.084 190.696 630.084 191.290  c
630.084 191.978 630.212 192.722 630.467 193.525  c
630.722 194.327 631.100 194.967 631.600 195.446  c
631.965 195.780 632.407 195.946 632.928 195.946  c
633.553 195.946 634.110 195.652 634.600 195.064  c
635.090 194.475 635.334 193.639 635.334 192.556  c
635.334 191.327 635.092 190.264 634.608 189.368  c
634.123 188.472 633.433 188.025 632.537 188.025  c
632.267 188.025 631.975 188.082 631.662 188.196  c
631.350 188.311 630.892 188.561 630.287 188.946  c
h
f
2 J
10.0000 M
1.00000 1.00000 .600000 RG
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
612.600 180.116 m
624.316 168.400 l
640.884 168.400 l
652.600 180.116 l
652.600 196.684 l
640.884 208.400 l
624.316 208.400 l
612.600 196.684 l
h
S
2 J
10.0000 M
[ ] 0.00000 d
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [355.9333190917969 334.3999938964844 362.6000061035156 334.3999938964844]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.0 0.0 0.0]
         /C1 [0.0 0.0 0.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
352.600 334.400 m
362.600 334.400 l
362.600 344.400 l
352.600 344.400 l
352.600 334.400 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
361.484 317.717 m
360.953 319.030 l
360.598 318.978 360.213 318.858 359.796 318.671  c
359.473 318.535 359.213 318.467 359.015 318.467  c
358.713 318.467 358.427 318.655 358.156 319.030  c
357.822 319.499 357.593 319.863 357.468 320.124  c
357.468 324.389 l
357.468 324.868 357.588 325.197 357.828 325.374  c
358.025 325.509 358.380 325.577 358.890 325.577  c
359.734 325.577 l
359.734 325.999 l
354.499 325.999 l
354.499 325.577 l
355.062 325.577 355.453 325.441 355.671 325.171  c
355.880 324.921 355.984 324.509 355.984 323.936  c
355.984 318.842 l
354.499 318.327 l
354.499 317.952 l
357.015 317.077 l
357.468 317.077 l
357.499 319.405 l
357.916 318.728 358.140 318.368 358.171 318.327  c
358.505 317.827 358.770 317.504 358.968 317.358  c
359.135 317.243 359.343 317.186 359.593 317.186  c
359.770 317.186 360.020 317.249 360.343 317.374  c
361.484 317.717 l
h
371.154 322.921 m
370.732 325.999 l
361.919 325.999 l
361.919 325.655 l
362.503 324.915 363.305 324.035 364.326 323.014  c
365.857 321.493 366.701 320.650 366.857 320.483  c
368.232 319.025 368.919 317.598 368.919 316.202  c
368.919 315.056 368.445 314.197 367.497 313.624  c
367.050 313.374 366.555 313.249 366.013 313.249  c
365.190 313.249 364.456 313.546 363.810 314.139  c
363.227 314.691 362.810 315.384 362.560 316.217  c
362.216 316.217 l
362.352 314.947 362.828 313.923 363.646 313.147  c
364.464 312.371 365.466 311.983 366.654 311.983  c
368.247 311.983 369.425 312.618 370.185 313.889  c
370.529 314.493 370.701 315.160 370.701 315.889  c
370.701 317.160 370.175 318.332 369.122 319.405  c
367.060 321.139 l
365.841 322.160 364.602 323.327 363.341 324.639  c
369.122 324.639 l
369.831 324.639 370.279 324.436 370.466 324.030  c
370.560 323.811 370.669 323.441 370.794 322.921  c
371.154 322.921 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
352.600 334.400 m
362.600 334.400 l
362.600 344.400 l
352.600 344.400 l
352.600 334.400 l
h
S
2 J
10.0000 M
1.00000 1.00000 0.00000 RG
newpath
432.600 339.400 m
432.600 350.446 423.646 359.400 412.600 359.400  c
401.554 359.400 392.600 350.446 392.600 339.400  c
392.600 328.354 401.554 319.400 412.600 319.400  c
423.646 319.400 432.600 328.354 432.600 339.400  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
417.194 344.493 m
416.163 347.290 l
407.569 347.290 l
407.569 346.900 l
410.100 344.587 411.881 342.702 412.913 341.243  c
413.944 339.785 414.459 338.446 414.459 337.228  c
414.459 336.311 414.176 335.556 413.608 334.962  c
413.040 334.368 412.366 334.071 411.584 334.071  c
410.866 334.071 410.222 334.280 409.655 334.696  c
409.087 335.113 408.668 335.728 408.397 336.540  c
407.991 336.540 l
408.168 335.217 408.629 334.199 409.373 333.485  c
410.118 332.772 411.043 332.415 412.147 332.415  c
413.334 332.415 414.324 332.795 415.116 333.556  c
415.907 334.316 416.303 335.212 416.303 336.243  c
416.303 336.983 416.131 337.722 415.788 338.462  c
415.256 339.618 414.397 340.847 413.209 342.150  c
411.418 344.097 410.303 345.269 409.866 345.665  c
413.663 345.665 l
414.433 345.665 414.975 345.636 415.288 345.579  c
415.600 345.522 415.881 345.405 416.131 345.228  c
416.381 345.051 416.600 344.806 416.788 344.493  c
417.194 344.493 l
h
f
2 J
10.0000 M
1.00000 1.00000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
432.600 339.400 m
432.600 350.446 423.646 359.400 412.600 359.400  c
401.554 359.400 392.600 350.446 392.600 339.400  c
392.600 328.354 401.554 319.400 412.600 319.400  c
423.646 319.400 432.600 328.354 432.600 339.400  c
h
S
2 J
10.0000 M
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [465.9333190917969 334.3999938964844 472.6000061035156 334.3999938964844]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.0 0.0 0.0]
         /C1 [0.0 0.0 0.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
462.600 334.400 m
472.600 334.400 l
472.600 344.400 l
462.600 344.400 l
462.600 334.400 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
471.484 317.717 m
470.953 319.030 l
470.598 318.978 470.213 318.858 469.796 318.671  c
469.473 318.535 469.213 318.467 469.015 318.467  c
468.713 318.467 468.427 318.655 468.156 319.030  c
467.822 319.499 467.593 319.863 467.468 320.124  c
467.468 324.389 l
467.468 324.868 467.588 325.197 467.828 325.374  c
468.025 325.509 468.380 325.577 468.890 325.577  c
469.734 325.577 l
469.734 325.999 l
464.499 325.999 l
464.499 325.577 l
465.062 325.577 465.453 325.441 465.671 325.171  c
465.880 324.921 465.984 324.509 465.984 323.936  c
465.984 318.842 l
464.499 318.327 l
464.499 317.952 l
467.015 317.077 l
467.468 317.077 l
467.499 319.405 l
467.916 318.728 468.140 318.368 468.171 318.327  c
468.505 317.827 468.770 317.504 468.968 317.358  c
469.135 317.243 469.343 317.186 469.593 317.186  c
469.770 317.186 470.020 317.249 470.343 317.374  c
471.484 317.717 l
h
480.904 321.155 m
480.904 322.072 480.628 322.941 480.076 323.764  c
479.576 324.525 478.904 325.134 478.060 325.592  c
477.206 326.072 476.300 326.311 475.341 326.311  c
474.081 326.311 473.122 326.046 472.466 325.514  c
472.164 325.285 472.013 325.030 472.013 324.749  c
472.013 324.561 472.081 324.389 472.216 324.233  c
472.352 324.077 472.508 323.999 472.685 323.999  c
472.914 323.999 473.310 324.207 473.872 324.624  c
475.060 325.483 l
475.310 325.639 475.654 325.717 476.091 325.717  c
477.279 325.717 478.185 325.051 478.810 323.717  c
479.102 323.103 479.247 322.441 479.247 321.733  c
479.247 320.952 479.044 320.269 478.638 319.686  c
478.190 319.009 477.596 318.671 476.857 318.671  c
476.326 318.671 475.810 318.868 475.310 319.264  c
475.107 318.967 l
475.846 318.342 476.326 317.926 476.544 317.717  c
477.096 317.197 477.503 316.717 477.763 316.280  c
477.992 315.905 478.107 315.525 478.107 315.139  c
478.107 314.556 477.896 314.072 477.474 313.686  c
477.052 313.301 476.550 313.108 475.966 313.108  c
475.362 313.108 474.779 313.332 474.216 313.780  c
473.727 314.176 473.336 314.671 473.044 315.264  c
472.654 315.108 l
473.164 313.806 473.966 312.889 475.060 312.358  c
475.581 312.108 476.133 311.983 476.716 311.983  c
477.852 311.983 478.685 312.389 479.216 313.202  c
479.456 313.577 479.576 313.988 479.576 314.436  c
479.576 315.613 478.820 316.650 477.310 317.546  c
477.357 317.577 l
477.461 317.566 477.565 317.561 477.669 317.561  c
478.909 317.561 479.831 318.139 480.435 319.296  c
480.747 319.889 480.904 320.509 480.904 321.155  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
462.600 334.400 m
472.600 334.400 l
472.600 344.400 l
462.600 344.400 l
462.600 334.400 l
h
S
2 J
10.0000 M
1.00000 1.00000 .600000 RG
newpath
612.600 261.116 m
624.316 249.400 l
640.884 249.400 l
652.600 261.116 l
652.600 277.684 l
640.884 289.400 l
624.316 289.400 l
612.600 277.684 l
h
f*
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
636.647 262.728 m
635.819 264.556 l
631.428 264.556 l
630.475 266.509 l
632.371 266.790 633.876 267.493 634.991 268.618  c
635.939 269.597 636.412 270.743 636.412 272.056  c
636.412 272.827 636.256 273.538 635.944 274.189  c
635.631 274.840 635.241 275.394 634.772 275.853  c
634.303 276.311 633.777 276.681 633.194 276.962  c
632.371 277.358 631.527 277.556 630.662 277.556  c
629.787 277.556 629.149 277.405 628.748 277.103  c
628.347 276.801 628.147 276.472 628.147 276.118  c
628.147 275.920 628.230 275.743 628.397 275.587  c
628.564 275.431 628.772 275.353 629.022 275.353  c
629.209 275.353 629.373 275.381 629.514 275.439  c
629.655 275.496 629.892 275.644 630.225 275.884  c
630.767 276.259 631.314 276.446 631.866 276.446  c
632.699 276.446 633.433 276.129 634.069 275.493  c
634.704 274.858 635.022 274.087 635.022 273.181  c
635.022 272.295 634.738 271.472 634.170 270.712  c
633.603 269.952 632.824 269.363 631.834 268.946  c
631.053 268.623 629.985 268.436 628.631 268.384  c
631.428 262.728 l
636.647 262.728 l
h
f
2 J
10.0000 M
1.00000 1.00000 .600000 RG
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
612.600 261.116 m
624.316 249.400 l
640.884 249.400 l
652.600 261.116 l
652.600 277.684 l
640.884 289.400 l
624.316 289.400 l
612.600 277.684 l
h
S
2 J
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 .600000 RG
newpath
612.600 331.116 m
624.316 319.400 l
640.884 319.400 l
652.600 331.116 l
652.600 347.684 l
640.884 359.400 l
624.316 359.400 l
612.600 347.684 l
h
f*
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
637.334 341.915 m
637.334 343.446 l
635.381 343.446 l
635.381 347.290 l
633.616 347.290 l
633.616 343.446 l
627.444 343.446 l
627.444 342.071 l
634.194 332.415 l
635.381 332.415 l
635.381 341.915 l
637.334 341.915 l
h
633.616 341.915 m
633.616 334.696 l
628.491 341.915 l
633.616 341.915 l
h
f
2 J
10.0000 M
1.00000 1.00000 .600000 RG
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
612.600 331.116 m
624.316 319.400 l
640.884 319.400 l
652.600 331.116 l
652.600 347.684 l
640.884 359.400 l
624.316 359.400 l
612.600 347.684 l
h
S
2 J
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 0.00000 RG
newpath
542.600 339.400 m
542.600 350.446 533.646 359.400 522.600 359.400  c
511.554 359.400 502.600 350.446 502.600 339.400  c
502.600 328.354 511.554 319.400 522.600 319.400  c
533.646 319.400 542.600 328.354 542.600 339.400  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
518.225 335.493 m
518.631 334.514 519.152 333.756 519.787 333.220  c
520.423 332.683 521.215 332.415 522.162 332.415  c
523.329 332.415 524.225 332.795 524.850 333.556  c
525.319 334.129 525.553 334.738 525.553 335.384  c
525.553 336.436 524.886 337.530 523.553 338.665  c
524.449 339.019 525.126 339.522 525.584 340.173  c
526.043 340.824 526.272 341.587 526.272 342.462  c
526.272 343.722 525.871 344.816 525.069 345.743  c
524.027 346.952 522.511 347.556 520.522 347.556  c
519.543 347.556 518.876 347.433 518.522 347.189  c
518.168 346.944 517.991 346.681 517.991 346.400  c
517.991 346.191 518.074 346.009 518.241 345.853  c
518.407 345.696 518.610 345.618 518.850 345.618  c
519.027 345.618 519.209 345.644 519.397 345.696  c
519.522 345.738 519.798 345.871 520.225 346.095  c
520.652 346.319 520.949 346.452 521.116 346.493  c
521.386 346.577 521.668 346.618 521.959 346.618  c
522.699 346.618 523.337 346.334 523.873 345.767  c
524.410 345.199 524.678 344.530 524.678 343.759  c
524.678 343.186 524.553 342.634 524.303 342.103  c
524.116 341.696 523.912 341.389 523.694 341.181  c
523.392 340.900 522.970 340.642 522.428 340.407  c
521.886 340.173 521.340 340.056 520.787 340.056  c
520.444 340.056 l
520.444 339.743 l
521.006 339.670 521.571 339.465 522.139 339.126  c
522.707 338.788 523.121 338.381 523.381 337.907  c
523.642 337.433 523.772 336.915 523.772 336.353  c
523.772 335.613 523.540 335.017 523.077 334.564  c
522.613 334.110 522.037 333.884 521.350 333.884  c
520.246 333.884 519.319 334.478 518.569 335.665  c
518.225 335.493 l
h
f
2 J
10.0000 M
1.00000 1.00000 0.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
542.600 339.400 m
542.600 350.446 533.646 359.400 522.600 359.400  c
511.554 359.400 502.600 350.446 502.600 339.400  c
502.600 328.354 511.554 319.400 522.600 319.400  c
533.646 319.400 542.600 328.354 542.600 339.400  c
h
S
2 J
10.0000 M
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [585.5333251953125 228.39999389648438 592.2000122070312 228.39999389648438]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.0 0.0 0.0]
         /C1 [0.0 0.0 0.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
582.200 228.400 m
592.200 228.400 l
592.200 238.400 l
582.200 238.400 l
582.200 228.400 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
591.084 211.717 m
590.553 213.030 l
590.198 212.978 589.813 212.858 589.396 212.671  c
589.073 212.535 588.813 212.467 588.615 212.467  c
588.313 212.467 588.027 212.655 587.756 213.030  c
587.422 213.499 587.193 213.863 587.068 214.124  c
587.068 218.389 l
587.068 218.868 587.188 219.197 587.428 219.374  c
587.625 219.509 587.980 219.577 588.490 219.577  c
589.334 219.577 l
589.334 219.999 l
584.099 219.999 l
584.099 219.577 l
584.662 219.577 585.053 219.441 585.271 219.171  c
585.480 218.921 585.584 218.509 585.584 217.936  c
585.584 212.842 l
584.099 212.327 l
584.099 211.952 l
586.615 211.077 l
587.068 211.077 l
587.099 213.405 l
587.516 212.728 587.740 212.368 587.771 212.327  c
588.105 211.827 588.370 211.504 588.568 211.358  c
588.735 211.243 588.943 211.186 589.193 211.186  c
589.370 211.186 589.620 211.249 589.943 211.374  c
591.084 211.717 l
h
600.535 206.780 m
595.176 220.311 l
593.972 220.311 l
599.285 207.749 l
593.238 207.749 l
592.790 207.749 592.483 207.848 592.316 208.046  c
592.181 208.202 592.087 208.530 592.035 209.030  c
591.676 209.030 l
591.832 206.311 l
600.535 206.311 l
600.535 206.780 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
582.200 228.400 m
592.200 228.400 l
592.200 238.400 l
582.200 238.400 l
582.200 228.400 l
h
S
2 J
10.0000 M
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [575.933349609375 334.3999938964844 582.5999755859375 334.3999938964844]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.0 0.0 0.0]
         /C1 [0.0 0.0 0.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
572.600 334.400 m
582.600 334.400 l
582.600 344.400 l
572.600 344.400 l
572.600 334.400 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
581.484 317.717 m
580.953 319.030 l
580.598 318.978 580.213 318.858 579.796 318.671  c
579.473 318.535 579.213 318.467 579.015 318.467  c
578.713 318.467 578.426 318.655 578.156 319.030  c
577.822 319.499 577.593 319.863 577.468 320.124  c
577.468 324.389 l
577.468 324.868 577.588 325.197 577.828 325.374  c
578.025 325.509 578.380 325.577 578.890 325.577  c
579.734 325.577 l
579.734 325.999 l
574.499 325.999 l
574.499 325.577 l
575.062 325.577 575.453 325.441 575.671 325.171  c
575.880 324.921 575.984 324.509 575.984 323.936  c
575.984 318.842 l
574.499 318.327 l
574.499 317.952 l
577.015 317.077 l
577.468 317.077 l
577.499 319.405 l
577.916 318.728 578.140 318.368 578.171 318.327  c
578.505 317.827 578.770 317.504 578.968 317.358  c
579.135 317.243 579.343 317.186 579.593 317.186  c
579.770 317.186 580.020 317.249 580.343 317.374  c
581.484 317.717 l
h
591.341 321.999 m
589.138 321.999 l
589.138 326.311 l
587.669 326.311 l
587.669 321.999 l
582.044 321.999 l
582.044 321.499 l
588.529 311.983 l
589.138 311.983 l
589.138 320.905 l
591.341 320.905 l
591.341 321.999 l
h
587.669 320.905 m
587.622 314.077 l
583.076 320.905 l
587.669 320.905 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
572.600 334.400 m
582.600 334.400 l
582.600 344.400 l
572.600 344.400 l
572.600 334.400 l
h
S
2 J
10.0000 M
1.00000 1.00000 .600000 RG
newpath
172.600 331.116 m
184.316 319.400 l
200.884 319.400 l
212.600 331.116 l
212.600 347.684 l
200.884 359.400 l
184.316 359.400 l
172.600 347.684 l
h
f*
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
184.561 341.150 m
184.551 342.618 184.905 343.764 185.624 344.587  c
186.343 345.420 187.186 345.837 188.155 345.837  c
188.791 345.837 189.348 345.660 189.827 345.306  c
190.306 344.952 190.707 344.347 191.030 343.493  c
191.358 343.696 l
191.212 344.686 190.778 345.582 190.054 346.384  c
189.330 347.186 188.421 347.587 187.327 347.587  c
186.150 347.587 185.140 347.129 184.296 346.212  c
183.452 345.295 183.030 344.056 183.030 342.493  c
183.030 340.816 183.462 339.506 184.327 338.564  c
185.192 337.621 186.275 337.150 187.577 337.150  c
188.681 337.150 189.587 337.514 190.296 338.243  c
191.004 338.972 191.358 339.941 191.358 341.150  c
184.561 341.150 l
h
184.561 340.540 m
189.108 340.540 l
189.077 339.905 189.004 339.457 188.890 339.196  c
188.712 338.801 188.447 338.488 188.093 338.259  c
187.739 338.030 187.369 337.915 186.983 337.915  c
186.390 337.915 185.856 338.144 185.382 338.603  c
184.908 339.061 184.634 339.707 184.561 340.540  c
h
194.560 334.150 m
198.107 332.415 l
198.467 332.415 l
198.467 344.728 l
198.467 345.540 198.501 346.048 198.568 346.251  c
198.636 346.454 198.777 346.608 198.990 346.712  c
199.204 346.816 199.639 346.879 200.295 346.900  c
200.295 347.290 l
194.826 347.290 l
194.826 346.900 l
195.514 346.879 195.956 346.816 196.154 346.712  c
196.352 346.608 196.490 346.470 196.568 346.298  c
196.646 346.126 196.685 345.603 196.685 344.728  c
196.685 336.853 l
196.685 335.801 196.649 335.123 196.576 334.821  c
196.524 334.592 196.433 334.423 196.303 334.314  c
196.172 334.204 196.014 334.150 195.826 334.150  c
195.566 334.150 195.196 334.259 194.717 334.478  c
194.560 334.150 l
h
f
2 J
10.0000 M
1.00000 1.00000 .600000 RG
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
172.600 331.116 m
184.316 319.400 l
200.884 319.400 l
212.600 331.116 l
212.600 347.684 l
200.884 359.400 l
184.316 359.400 l
172.600 347.684 l
h
S
2 J
10.0000 M
[ ] 0.00000 d
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [245.93333435058594 334.3999938964844 252.60000610351562 334.3999938964844]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.0 0.0 0.0]
         /C1 [0.0 0.0 0.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
242.600 334.400 m
252.600 334.400 l
252.600 344.400 l
242.600 344.400 l
242.600 334.400 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
251.484 317.717 m
250.953 319.030 l
250.598 318.978 250.213 318.858 249.796 318.671  c
249.473 318.535 249.213 318.467 249.015 318.467  c
248.713 318.467 248.427 318.655 248.156 319.030  c
247.822 319.499 247.593 319.863 247.468 320.124  c
247.468 324.389 l
247.468 324.868 247.588 325.197 247.828 325.374  c
248.025 325.509 248.380 325.577 248.890 325.577  c
249.734 325.577 l
249.734 325.999 l
244.499 325.999 l
244.499 325.577 l
245.062 325.577 245.453 325.441 245.671 325.171  c
245.880 324.921 245.984 324.509 245.984 323.936  c
245.984 318.842 l
244.499 318.327 l
244.499 317.952 l
247.015 317.077 l
247.468 317.077 l
247.499 319.405 l
247.916 318.728 248.140 318.368 248.171 318.327  c
248.505 317.827 248.770 317.504 248.968 317.358  c
249.135 317.243 249.343 317.186 249.593 317.186  c
249.770 317.186 250.020 317.249 250.343 317.374  c
251.484 317.717 l
h
259.669 325.999 m
254.122 325.999 l
254.122 325.577 l
255.310 325.577 l
255.654 325.577 255.880 325.519 255.990 325.405  c
256.099 325.290 256.154 325.061 256.154 324.717  c
256.154 313.749 l
255.341 314.457 254.425 315.056 253.404 315.546  c
253.216 315.249 l
253.779 314.874 254.430 314.368 255.169 313.733  c
255.992 313.014 256.555 312.431 256.857 311.983  c
257.622 311.983 l
257.622 324.749 l
257.622 325.082 257.677 325.303 257.787 325.413  c
257.896 325.522 258.112 325.577 258.435 325.577  c
259.669 325.577 l
259.669 325.999 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
242.600 334.400 m
252.600 334.400 l
252.600 344.400 l
242.600 344.400 l
242.600 334.400 l
h
S
2 J
10.0000 M
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [410.9333190917969 412.7321472167969 417.6000061035156 412.7321472167969]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.0 0.0 0.0]
         /C1 [0.0 0.0 0.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
407.600 412.732 m
417.600 412.732 l
417.600 422.732 l
407.600 422.732 l
407.600 412.732 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
416.484 430.931 m
415.953 432.244 l
415.598 432.192 415.213 432.072 414.796 431.884  c
414.473 431.749 414.213 431.681 414.015 431.681  c
413.713 431.681 413.427 431.869 413.156 432.244  c
412.822 432.713 412.593 433.077 412.468 433.338  c
412.468 437.603 l
412.468 438.082 412.588 438.411 412.828 438.588  c
413.025 438.723 413.380 438.791 413.890 438.791  c
414.734 438.791 l
414.734 439.213 l
409.499 439.213 l
409.499 438.791 l
410.062 438.791 410.453 438.655 410.671 438.384  c
410.880 438.134 410.984 437.723 410.984 437.150  c
410.984 432.056 l
409.499 431.541 l
409.499 431.166 l
412.015 430.291 l
412.468 430.291 l
412.499 432.619 l
412.916 431.942 413.140 431.582 413.171 431.541  c
413.505 431.041 413.770 430.718 413.968 430.572  c
414.135 430.457 414.343 430.400 414.593 430.400  c
414.770 430.400 415.020 430.463 415.343 430.588  c
416.484 430.931 l
h
426.154 435.088 m
426.154 436.765 425.435 438.041 423.997 438.916  c
423.331 439.322 422.617 439.525 421.857 439.525  c
420.826 439.525 419.919 439.197 419.138 438.541  c
418.430 437.937 417.914 437.124 417.591 436.103  c
417.362 435.405 417.247 434.640 417.247 433.806  c
417.247 431.650 417.966 429.791 419.404 428.228  c
420.716 426.822 422.456 425.812 424.622 425.197  c
424.872 425.525 l
422.581 426.452 420.977 427.759 420.060 429.447  c
419.602 430.291 419.289 431.244 419.122 432.306  c
420.227 431.452 421.268 431.025 422.247 431.025  c
423.737 431.025 424.862 431.702 425.622 433.056  c
425.977 433.681 426.154 434.358 426.154 435.088  c
h
424.497 435.275 m
424.497 434.306 424.315 433.489 423.951 432.822  c
423.492 431.978 422.815 431.556 421.919 431.556  c
421.086 431.556 420.117 431.999 419.013 432.884  c
418.940 433.228 418.904 433.681 418.904 434.244  c
418.904 435.483 419.096 436.536 419.482 437.400  c
419.992 438.567 420.794 439.150 421.888 439.150  c
422.826 439.150 423.518 438.713 423.966 437.838  c
424.320 437.150 424.497 436.296 424.497 435.275  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
407.600 412.732 m
417.600 412.732 l
417.600 422.732 l
407.600 422.732 l
407.600 412.732 l
h
S
2 J
10.0000 M
0.00000 0.00000 1.00000 RG
4.00000 w
0 J
1.45000 M
newpath
322.600 339.400 m
352.600 339.400 l
S
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0.00000 0.00000 1.00000 RG
4.00000 w
0 J
1.45000 M
newpath
362.600 339.400 m
381.600 339.400 l
S
newpath
392.600 339.400 m
376.100 332.525 l
380.225 339.400 l
376.100 346.275 l
h
f
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0.00000 0.00000 1.00000 RG
4.00000 w
0 J
1.45000 M
newpath
432.600 339.400 m
462.600 339.400 l
S
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0.00000 0.00000 1.00000 RG
4.00000 w
0 J
1.45000 M
newpath
472.600 339.400 m
491.600 339.400 l
S
newpath
502.600 339.400 m
486.100 332.525 l
490.225 339.400 l
486.100 346.275 l
h
f
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0.00000 0.00000 1.00000 RG
4.00000 w
0 J
1.45000 M
newpath
533.008 322.322 m
584.153 238.400 l
S
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0.00000 0.00000 1.00000 RG
4.00000 w
0 J
1.45000 M
newpath
592.200 228.444 m
610.565 210.241 l
S
newpath
618.377 202.498 m
601.819 209.230 l
609.588 211.209 l
611.498 218.996 l
h
f
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0.00000 0.00000 1.00000 RG
4.00000 w
0 J
1.45000 M
newpath
592.200 237.365 m
608.219 250.067 l
S
newpath
616.839 256.902 m
608.181 241.263 l
607.142 249.213 l
599.638 252.037 l
h
f
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
.400000 .400000 .400000 RG
0 J
1.45000 M
newpath
542.600 339.400 m
572.600 339.400 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
.400000 .400000 .400000 RG
0 J
1.45000 M
newpath
582.600 339.400 m
604.629 339.400 l
S
newpath
612.629 339.400 m
600.629 334.400 l
603.629 339.400 l
600.629 344.400 l
h
f
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0.00000 0.00000 1.00000 RG
4.00000 w
0 J
1.45000 M
newpath
212.607 339.400 m
242.600 339.400 l
S
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0.00000 0.00000 1.00000 RG
4.00000 w
0 J
1.45000 M
newpath
252.600 339.400 m
271.600 339.400 l
S
newpath
282.600 339.400 m
266.100 332.525 l
270.225 339.400 l
266.100 346.275 l
h
f
1.00000 w
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
.400000 .400000 .400000 RG
0 J
1.45000 M
newpath
308.964 358.337 m
309.200 358.875 l
310.793 362.135 l
312.568 365.370 l
314.550 368.578 l
316.765 371.755 l
319.240 374.896 l
322.000 378.000 l
325.061 381.060 l
328.397 384.065 l
331.972 387.000 l
335.751 389.852 l
339.697 392.606 l
343.775 395.250 l
347.949 397.769 l
352.183 400.148 l
356.441 402.375 l
360.687 404.435 l
364.885 406.315 l
369.000 408.000 l
373.003 409.482 l
376.897 410.773 l
380.691 411.891 l
384.395 412.852 l
388.020 413.674 l
391.575 414.375 l
395.070 414.972 l
398.516 415.481 l
401.922 415.922 l
405.298 416.310 l
407.579 416.551 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
.400000 .400000 .400000 RG
0 J
1.45000 M
newpath
417.610 416.019 m
418.559 415.852 l
421.844 415.250 l
425.136 414.615 l
428.437 413.935 l
431.750 413.200 l
435.077 412.398 l
438.420 411.519 l
441.781 410.550 l
445.164 409.481 l
448.569 408.302 l
452.000 407.000 l
455.456 405.567 l
458.929 404.000 l
462.406 402.300 l
465.877 400.467 l
469.328 398.500 l
472.750 396.400 l
476.130 394.167 l
479.457 391.800 l
482.719 389.300 l
485.904 386.667 l
489.002 383.900 l
492.000 381.000 l
494.890 377.969 l
497.679 374.815 l
500.375 371.550 l
502.988 368.185 l
505.526 364.731 l
506.971 362.669 l
507.026 362.586 l
S
newpath
511.493 355.949 m
500.645 363.112 l
506.468 363.415 l
508.941 368.696 l
h
f
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
